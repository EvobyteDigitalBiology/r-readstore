{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ReadStore R Client (SDK)","text":"<p>r-readstore is a R client (SDK) that lets you easily connect to your ReadStore server and interact with the ReadStore API. By importing the readstore package in R, you can quickly retrieve data from a ReadStore server.</p> <p>This tool provides streamlined and standardized access to NGS datasets and metadata, helping you run analyses more efficiently and with fewer errors. You can easily scale your pipelines, and if you need to migrate or move NGS data, updating the ReadStore database ensures all your workflows stay up-to-date.</p> <p>Find more information on www.evo-byte.com/readstore</p> <p>For technical questions or problems with the install please contact support@evo-byte.com</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#140-2025-02-10","title":"[1.4.0] - 2025-02-10","text":"<p>Features - Add method update_dataset - Add method update_project</p> <p>Bugfixes - Provided user and token in client definition take precedence over config file</p>"},{"location":"CHANGELOG/#130-2025-01-02","title":"[1.3.0] - 2025-01-02","text":"<p>Features - Add method create_dataset - Add method delete_dataset - Add method create_project - Add method delete_project</p> <p>Updates - Update validation of metadata in backend</p>"},{"location":"CHANGELOG/#120-2024-12-13","title":"[1.2.0] - 2024-12-13","text":"<p>Features - Add method list_datasets_metadata - Add method list_projects_metadata - Add method list_pro_data_metadata</p> <p>Updates - list_datasets: add option to specify data.frame or list as return type - list_projects: add option to specify data.frame or list as return type - list_pro_data: add option to specify data.frame or list as return type</p> <p>Bugfixes Refactor: pro_data_path to pro_data_file</p>"},{"location":"CHANGELOG/#110-2024-12-01","title":"[1.1.0] - 2024-12-01","text":"<p>Features - Add method upload_pro_data - Add method list_pro_data - Add method get_pro_data - Add method delete_pro_data</p> <p>Updates</p> <ul> <li>upload_fastq: Add fastq_name and read_type arguments to enable definition of FASTQ names and read types</li> </ul>"},{"location":"CHANGELOG/#100-2024-11-06","title":"[1.0.0] - 2024-11-06","text":"<p>Initial Version</p>"},{"location":"readme/","title":"r-readstore SDK","text":"<p>This README describes r-readstore, the R client (SDK) for the ReadStore API. </p> <p>The full ReadStore Basic documentation is available here</p> <p>r-readstore can be used to access Projects, Datasets, ProData, metadata and attachment files in the ReadStore Database from within R code.  The package enables you to automate your bioinformatics pipelines, Python scripts and notebooks.</p> <p>Check the ReadStore Github repository for more information on how to get started with ReadStore and setting up your server.</p> <p>More infos on the ReadStore website</p> <p>Tutorials and Intro Videos: https://www.youtube.com/@evobytedigitalbio</p> <p>Blog posts and How-Tos: https://evo-byte.com/blog/</p> <p>For general questions reach out to info@evo-byte.com or in case of technical problems to support@evo-byte.com</p> <p>Happy analysis :)</p>"},{"location":"readme/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Description</li> <li>Installation</li> <li>ReadStore API</li> <li>Usage</li> <li>Contributing</li> <li>License</li> <li>Credits and Acknowledgments</li> </ul>"},{"location":"readme/#the-lean-solution-for-managing-ngs-and-omics-data","title":"The Lean Solution for Managing NGS and Omics Data","text":"<p>ReadStore is a platform for storing, managing, and integrating omics data. It speeds up analysis and offers a simple way of managing and sharing NGS omics datasets, metadata and processed data (Processed Data). Built-in project and metadata management structures your workflows and a collaborative user interface enhances teamwork \u2014 so you can focus on generating insights.</p> <p>The integrated Webservice (API) enables your to directly retrieve data from ReadStore via the terminal Command-Line-Interface (CLI) or Python / R SDKs.</p> <p>The ReadStore Basic version provides a local webserver with a simple user management. If you need an organization-wide deployment, advanced user and group management or cloud integration please check the ReadStore Advanced versions and reach out to info@evo-byte.com.</p>"},{"location":"readme/#description","title":"Description","text":"<p>r-readstore is a R client (SDK) that lets you easily connect to your ReadStore server and interact with the ReadStore API. By importing the readstore package in R, you can quickly retrieve data from a ReadStore server.</p> <p>This tool provides streamlined and standardized access to NGS datasets and metadata, helping you run analyses more efficiently and with fewer errors. You can easily scale your pipelines, and if you need to migrate or move NGS data, updating the ReadStore database ensures all your workflows stay up-to-date.</p>"},{"location":"readme/#security-and-permissions","title":"Security and Permissions","text":"<p>PLEASE READ AND FOLLOW THESE INSTRUCTIONS CAREFULLY!</p>"},{"location":"readme/#user-accounts-and-token","title":"User Accounts and Token","text":"<p>Using r-readstore requires an active user account and a token (and a running ReadStore server). </p> <p>You should never enter your user account password when working with r-readstore.</p> <p>To retrieve your token</p> <ol> <li>Login to the ReadStore app via your browser</li> <li>Navigate to <code>Settings</code> page and click on <code>Token</code></li> <li>You can regenerate your token anytime (<code>Reset</code>). This will invalidate the previous token</li> </ol> <p>For uploading FASTQ files your user account needs to have <code>Staging Permission</code>. You can check this in the <code>Settings</code> page of your account. If you not have <code>Staging Permission</code>, ask your ReadStore server admin to grant you permission.</p>"},{"location":"readme/#setting-your-credentials","title":"Setting Your Credentials","text":"<p>You need to provide the r-readstore client with valid ReadStore credentials.</p> <p>There are different options</p> <ol> <li> <p>Load credentials from the ReadStore <code>config</code> file.  The file is generated by the ReadStore CLI, by default in your home directory (<code>~/.readstore/</code>). Make sure to keep read permissions to the file restrictive</p> </li> <li> <p>Directly enter your username and token when instantiating a r-readstore client within your R code</p> </li> <li> <p>Set username and token via environment variables (<code>READSTORE_USERNAME</code>, <code>READSTORE_TOKEN</code>). This is useful in container or cloud environments.</p> </li> </ol>"},{"location":"readme/#installation","title":"Installation","text":"<p>In your R environment you can directly install the readstore client from the r-readstore GitHub repository</p> <pre><code># with remotes library\nlibrary(remotes)\nremotes::install_github('https://github.com/EvobyteDigitalBiology/r-readstore', subdir='readstore')\n\n# or with devtools library\nlibrary(devtools)\ndevtools::install_github('https://github.com/EvobyteDigitalBiology/r-readstore', subdir='readstore')\n</code></pre> <p>Validate the successful install by running</p> <pre><code>library(readstore)\n</code></pre>"},{"location":"readme/#readstore-api","title":"ReadStore API","text":"<p>The ReadStore Basic server provides a RESTful API for accessing resources via HTTP requests. This API extends the functionalities of the ReadStore CLI as well as the Python and R SDKs.</p>"},{"location":"readme/#api-endpoint","title":"API Endpoint","text":"<p>By default, the API is accessible at: <code>http://127.0.0.1:8000/api_x_v1/</code></p>"},{"location":"readme/#authentication","title":"Authentication","text":"<p>Users must authenticate using their username and token via the Basic Authentication scheme.</p>"},{"location":"readme/#example-usage","title":"Example Usage","text":"<p>Below is an example demonstrating how to use the ReadStore CLI to retrieve an overview of Projects by sending an HTTP <code>GET</code> request to the <code>project/</code> endpoint. In this example, the username is <code>testuser</code>, and the token is <code>0dM9qSU0Q5PLVgDrZRftzw</code>. You can find your token in the ReadStore settings.</p> <pre><code>curl -X GET -u testuser:0dM9qSU0Q5PLVgDrZRftzw http://localhost:8000/api_x_v1/project/\n</code></pre>"},{"location":"readme/#example-reponse","title":"Example Reponse","text":"<p>A successful HTTP response returns a JSON-formatted string describing the project(s) in the ReadStore database. Example response:</p> <pre><code>[{\n  \"id\": 4,\n  \"name\": \"TestProject99\",\n  \"metadata\": {\n    \"key1\": \"value1\",\n    \"key2\": \"value2\"\n  },\n  \"attachments\": []\n}]\n</code></pre>"},{"location":"readme/#documentation","title":"Documentation","text":"<p>Comprehensive API documentation is available in the ReadStore Basic Docs.</p>"},{"location":"readme/#usage","title":"Usage","text":"<p>Detailed tutorials, videos and explanations are found on YouTube or on the EVOBYTE blog.</p>"},{"location":"readme/#quickstart","title":"Quickstart","text":"<p>Let's access some dataset and project data from the ReadStore database!</p> <p>Make sure a ReadStore server is running and reachable (by default under <code>127.0.0.1:8000</code>). You can enter (<code>http://127.0.0.1:8000/api_x_v1/</code>) in your browser and should get a response from the API.</p> <p>We assume you ran <code>readstore configure</code> before to create a config file for your user. If not, consult the ReadStore CLI README on how to set this up.</p> <p>We first will create the R client and perform some operations to retrieve data from the ReadStore database. More information on all available methods can be found below.</p> <pre><code>library(readstore)\n\nclient &lt;- get_client()  # Create an instance of the ReadStore client\n\n# Manage Datasets \n\ndatasets &lt;- list_datasets(client)          # List all datasets and return json-style list of list\n\ndatasets_project_1 &lt;- list_datasets(client,          # List all datasets for project 1\n                                    project_id = 1)  # return data.frame\n\ndatasets_metadata &lt;- list_datasets_metadata(client)  # Get metadata for datasets cast to data.frame\n                                                     # metadata keys as column names\n\ndatasets_id_25 &lt;- get_dataset(client,                # Get detailed data for dataset 25\n                             dataset_id = 25)        # return json-style R list\n\ncreate_dataset(client,                               # Create new dataset with name TestDataset\n              dataset_name = 'TestDataset',          # and metadata 'key' : 'value'\n              metadata = list(key = 'value'))\n\nfastq_files_dataset_25 &lt;- get_fastq(client,          # Get individual fastq files for dataset 25\n                                   dataset_id = 25)  # return json-style R nested list\n\ndownload_dataset_attachment(client,                 # Download file attached to dataset 25\n                            dataset_id = 25,        \n                            attachment_name = 'gene_table.tsv') \n\n# Manage Projects\n\nprojects &lt;- list_projects(client)          # List all projects and return data.frame\n\nprojects_metadata &lt;- list_projects_metadata(client) # Get metadata for projects cast to data.frame\n                                                    # metadata keys as column names\n\nprojects &lt;- get_project(client,                         # Get details for MyProject\n                       project_name = 'MyProject')      # return json-style list\n\ncreate_project(client,                        # Create new Project\n              project_name = 'MyProject2')\n\ndownload_project_attachment(client,                     # Download file attached to project\n                            project_name = 'MyProject'\n                            attachment_name = 'project_plan.pptx')\n\n# Upload FASTQ datasets\n\nupload_fastq(client,                                                 # Upload FASTQ files\n            fastq = c('path/to/fastq_R1.fq', 'path/to/fastq_R2.fq'), # Define path to FASTQ  \n            fastq_name = c('sample_R1', 'sample_R2'),                # Set names of FASTQ files\n            read_type = c('R1', 'R2'))                               # Define type of Read\n\n# Manage ProData\n\nupload_pro_data(client,                                         # Upload Processed Data files\n                name = 'sample_1_count_matrix',                 # Set name of count matrix\n                pro_data_path = 'path/to/sample_1_counts.h5',   # Set file path\n                data_type = 'count_matrix',                     # Set type to 'count_matrix'\n                dataset_id = 25)                                # Attach ProData to dataset_id 25\n\npro_data_list &lt;- list_pro_data(client,                # List Processed Data (ProData)\n                            dataset_id = 25)          # Get ProData for dataset_id 25\n\npro_data_metadata &lt;- list_pro_data(client,                   # List ProData metadata as data.frame\n                                   dataset_id = 25)          # For dataset_id 25\n\npro_data &lt;- get_pro_data(client,                         # Get individual ProData entry\n                        name = 'sample_1_count_matrix',  # Get ProData with name 'sample_1_count_matrix'\n                        dataset_id = 25)                 # Get ProData for dataset_id 25\n\npro_data &lt;- delete_pro_data(client,                         # Delete ProData\n                           name = 'sample_1_count_matrix',  # Get ProData with name 'sample_1_count_matrix'\n                           dataset_id = 25)                 # Get ProData for dataset_id 25\n</code></pre>"},{"location":"readme/#configure-the-r-client","title":"Configure the R Client","text":"<p>The Client is the central object and provides authentication against the ReadStore API. By default, the client will try to read the <code>~/.readstore/config</code> credentials file. You can change the directory if your config file is located in another folder.</p> <p>If you set the <code>username</code> and <code>token</code> arguments, the client will use these credentials instead.</p> <p>If your ReadStore server is not running under localhost (<code>127.0.0.1</code>) port <code>8000</code>, you can adapt the default settings.</p> <pre><code>client &lt;- get_client(config_dir = '~/.readstore',  # Directory containing ReadStore credentials\n                    username = NULL,               # Username\n                    token = NULL,                  # Token\n                    host = 'http://localhost',     # Hostname / IP of ReadStore server\n                    port = 8000,                   # Server Port Number\n                    fastq_extensions= c('.fastq','.fastq.gz','.fq','.fq.gz')) \n                    # Accepted FASTQ file extensions for upload validation \n</code></pre> <p>Is is possible to set userame, token, server endpoint and fastq extensions using the listed environment variables.  The enironment variables precede over other client configurations.</p> <ul> <li><code>READSTORE_USERNAME</code> (username)</li> <li><code>READSTORE_TOKEN</code>    (token)</li> <li><code>READSTORE_ENDPOINT_URL</code> (<code>http://host:post</code>, e.g. <code>http://localhost:8000</code>)</li> <li><code>READSTORE_FASTQ_EXTENSIONS</code> (fastq_extensions, <code>'.fastq',.fastq.gz,.fq,.fq.gz'</code>)</li> </ul> <p>Possible errors</p> <pre><code>- Connection Error:     If no ReadStore server was found at the provided endpoint\n- Authentication Error: If provided username or token are not found\n- No Permission to Upload/Delete FASTQ/ProData: User has no [Staging Permissions]\n</code></pre>"},{"location":"readme/#access-datasets","title":"Access Datasets","text":"<pre><code># List ReadStore Datasets\n\n# Option to subset by project_id OR project_name\n# Option to return either a data.frame or list \n\nlist_datasets(client,\n              project_id = NULL,            # Filter datasets for project with id `project_id`\n              project_name = NULL           # Filter datasets for project with name `project_name`\n              return_type = 'data.frame')   # return_type (data.frame | list)\n\n# List ReadStore Dataset Metadata\n\n# Returns formatted metadata for each dataset\n# Metadata keys are cast into data.frame columns (wide-format)\n\n# Option to subset by project_id OR project_name\n# Option to return either a data.frame or list \n\nlist_datasets_metadata(client,\n                    project_id = NULL,            # Filter metadata for project with id `project_id`\n                    project_name = NULL           # Filter metadata for project with name `project_name`\n                    return_type = 'data.frame')   # return_type (data.frame | list)\n\n# Get ReadStore Dataset Details\n\n# MUST provide dataset_id OR dataset_name\n# Option to return either a data.frame or list \n\nget_dataset(client,\n            dataset_id = NULL,\n            dataset_name = NULL) # Return json style list\n\n# Get FASTQ file(s)for a specific dataset\n\n# Must provide dataset_id OR dataset_name\n\nget_fastq(client,\n          dataset_id = NULL,       # Get fastq data for dataset with id `dataset_id`\n          dataset_name = NULL)     # Get fastq data for dataset `dataset_name`\n                                   # Return  json style list of lists\n</code></pre>"},{"location":"readme/#edit-datasets","title":"Edit Datasets","text":"<p>NOTE Editing methods as create or delete require <code>Staging Permission</code> authorization.</p> <p>When creating datasets, the <code>name</code> argument and <code>metadata</code> dictionary are checked for consistency: Each must not be empty, contain only alphanumeric characters (plus _-.@). Metadata keys must not contain reserved keywords (listed below).</p> <pre><code># Create an empty Dataset, without FASTQ files attached\n\n# Name must be unique in Database\n# Optionally define Project IDs and/or Project names to attach Dataset to.  \n\ncreate_dataset(client,\n               name,                    # Set name\n               description = '',        # Set description. Defaults to ''\n               project_ids = c(),    # Set project_ids (as vector) to attach dataset to.\n               project_names = c(),  # Set project_names (as vector) to attach dataset to.\n               metadata = list())       # Set metadata for dataset. Defaults to empty list.\n\n# Update existing Datasets\n# Optionally define attributes which should be updated\n\nupdate_dataset(client,\n              dataset_id,           # Set id of dataset to update\n              dataset_name = NULL,  # Updated dataset name (optional)\n              description = NULL,   # Updated description (optional)\n              project_ids = NULL,   # Updated project_ids (optional)\n              project_names = NULL, # Updated project_ids (optional)\n              metadata = NULL)      # Updated metadata (optional)\n\n# Delete Dataset (and attached FASTQ files)\n# Either dataset_id or dataset_name argument must be provided\n\ndelete_dataset(client,\n               dataset_id = NULL,   # Delete by ID.\n               dataset_name = NULL) # Delete by Name.\n</code></pre>"},{"location":"readme/#access-projects","title":"Access Projects","text":"<pre><code># List ReadStore Projects\n\nlist_projects(client,\n              return_type = 'data.frame') # Return type (data.frame | list)\n\n\n# Get Metadata for Projects from ReadStore\n\n# Return metadata for projects from the ReadStore API\n# Order of returned projects is the same as the dataset list\n\n# Return a list of metadata entries for each project\n\n# or return a data.frame with metadata entries\n# Here metadata keys will be cast to column names (wide format)\n\nlist_projects_metadata(client,\n                       return_type = 'data.frame')  # The return type (data.frame | list)\n\n\n# Get ReadStore Project Details\n\n# Must provide project_id OR project_name\n\nget_project(client,\n            project_id = NULL,    # Get project with id `project_id`\n            project_name = NULL)  # Filter project with name `project_name`\n</code></pre>"},{"location":"readme/#edit-projects","title":"Edit Projects","text":"<p>NOTE Editing methods as create or delete require <code>Staging Permission</code> authorization.</p> <p>When creating datasets, the <code>name</code> argument and <code>metadata</code> dictionary are checked for consistency: Each must not be empty, contain only alphanumeric characters (plus _-.@). Metadata keys must not contain reserved keywords (listed below).</p> <pre><code># Create ReadStore Project\n\n# name must be unique in Database\n# dataset_metadata_keys can be attached and will be set as default metadata keys for attached datasets\n\ncreate_project(client,\n                name,               # Set Project name\n                description = '',   # Set Project description\n                metadata = list(),  # Set Project metadata as dictionary\n                dataset_metadata_keys = c()) # Set dataset metadata as vector\n\n# Update Project\n\nupdate_project(client,\n                project_id,           # Set ID of project to update\n                project_name = NULL,  # Set updated project Name\n                description = NULL,   # Set updated description\n                metadata = NULL,      # Set updated metadata\n                dataset_metadata_keys = NULL) # Set updated dataset_metadata_keys\n\n# Delete ReadStore Project\n\n# Either project_id or project_name argument must be provided\n\ndelete_project(client,\n                project_id = NULL,    # Delete by ID. Defaults to None.\n                project_name = NULL)  # Delete by Name. Defaults to None.\n</code></pre>"},{"location":"readme/#edit-and-access-prodata","title":"Edit and Access ProData","text":"<pre><code># Upload ProData\n\nupload_pro_data(client,\n                name,                # name of ProData entry\n                pro_data_path,       # Path to Processed Data file\n                data_type,           # Type of dataset (e.g. count_matrix)\n                metadata = list(),   # Metadata key values list for ProData\n                description = \"\",    # Set description\n                dataset_id = NULL,   # Dataset ID to attach ProData to \n                dataset_name = NULL) # Dataset Name to attach ProData to\n\n# List ProData\n\nlist_pro_data(client,\n                project_id = NULL,       # Filter by Project ID\n                project_name = NULL,     # Filter by Project Name\n                dataset_id = NULL,       # Filter by Dataset ID\n                dataset_name = NULL,     # Filter by Dataset Name\n                name = NULL,             # Filter by Name\n                data_type = NULL,        # Filter by Data Type\n                include_archived = FALSE, # Return archived ProData\n                return_type = 'data.frame') # The return type (data.frame | list)\n\n\n# List ProData Metadata\n\nlist_pro_data_metadata(client,\n                        project_id = NULL,       # Filter by Project ID\n                        project_name = NULL,     # Filter by Project Name\n                        dataset_id = NULL,       # Filter by Dataset ID\n                        dataset_name = NULL,     # Filter by Dataset Name\n                        name = NULL,             # Filter by Name\n                        data_type = NULL,        # Filter by Data Type\n                        include_archived = FALSE,# Return archived ProData\n                        return_type = 'data.frame') # The return type (data.frame | list)\n\n# This function returns metadata for processed data (ProData) from the ReadStore API. The order of the returned metadata is the same as the ProData list. You can choose to return a list of metadata entries for each dataset or a data.frame with metadata entries where metadata keys will be cast to column names (wide format).\n\n# Get ProData\n\nget_pro_data(client,\n            pro_data_id = NULL,     # Get ProData by ID\n            name = NULL,            # Get ProData by Name\n            version = NULL,         # Get Specific Version\n            dataset_id = NULL,      # Get ProData by dataset_id\n            dataset_name = NULL)    # Get ProData by dataset_name\n\n# Must provide pro_data_id OR (dataset_name/dataset_id and name)\n\n# Delete ProData\n\ndelete_pro_data(client,                 \n                pro_data_id = NULL,  # Get ProData by ID\n                name = NULL,         # Get ProData by Name    \n                dataset_id = NULL,   # Get ProData by dataset_id\n                dataset_name = NULL, # Get ProData by dataset_name\n                version = NULL)      # Set specific version to delete\n\n# Must provide pro_data_id OR (dataset_name/dataset_id and name)\n</code></pre>"},{"location":"readme/#download-attachments","title":"Download Attachments","text":"<pre><code># Download project attachment file from ReadStore Database\n\n# Must provide project_id OR project_name\n\ndownload_project_attachment(client,\n                            attachment_name,          # name of attachment file\n                            project_id = NULL,        # project id with attachment\n                            project_name = NULL,      # project name with attachment\n                            outpath = NULL)           # Path to download file to\n                                                      # default NULL download to working dir\n\n# Download dataset attachment file from ReadStore Database \n\n# Must provide dataset_id OR dataset_name\n\ndownload_dataset_attachment(client,\n                            attachment_name,             # name of attachment file\n                            dataset_id = NULL,           # datatset id with attachment\n                            dataset_name = NULL,         # datatset name with attachment\n                            outpath = NULL)              # Path to download file to\n</code></pre>"},{"location":"readme/#upload-fastq-files","title":"Upload FASTQ files","text":"<p>Upload FASTQ files to ReadStore server. The methods checks if the FASTQ files exist and end with valid FASTQ ending.</p> <pre><code># Upload FASTQ files to ReadStore \n\nupload_fastq(client,                                         \n             fastq,             # Path to FASTQ file (string/vector)\n             fastq_name = NULL, # Names of FASTQ files (string/vector)\n             read_type = NULL)  # Read Types (string/vector)\n</code></pre>"},{"location":"readme/#reserved-keywords","title":"Reserved keywords","text":"<p>The following keywords must not be used as metadata keys</p> <pre><code>'id','name','project','project_ids','project_names','owner_group_name','qc_passed','paired_end',\n'index_read','created','description','owner_username','fq_file_r1','fq_file_r2','fq_file_i1',\n'fq_file_i2','id_project','name_project','name_og','archived','collaborators','dataset_metadata_keys',\n'data_type','version','valid_to','upload_path','owner_username','fq_dataset','id_fq_dataset','name_fq_dataset'\n</code></pre>"},{"location":"readme/#contributing","title":"Contributing","text":"<p>Contributions make this project better! Whether you want to report a bug, improve documentation, or add new features, any help is welcomed!</p>"},{"location":"readme/#how-you-can-help","title":"How You Can Help","text":"<ul> <li>Report Bugs</li> <li>Suggest Features</li> <li>Improve Documentation</li> <li>Code Contributions</li> </ul>"},{"location":"readme/#contribution-workflow","title":"Contribution Workflow","text":"<ol> <li>Fork the repository and create a new branch for each contribution.</li> <li>Write clear, concise commit messages.</li> <li>Submit a pull request and wait for review.</li> </ol> <p>Thank you for helping make this project better!</p>"},{"location":"readme/#license","title":"License","text":"<p>The r-readstore is licensed under an GLP3 Open Source License. See the LICENSE file for more information.</p>"},{"location":"readme/#credits-and-acknowledgments","title":"Credits and Acknowledgments","text":"<p>r-readstore is built upon the following open-source python packages and would like to thank all contributing authors, developers and partners.</p> <ul> <li>R (https://www.r-project.org/)</li> <li>httr (https://httr.r-lib.org/)</li> <li>base64enc (https://github.com/s-u/base64enc)</li> <li>ini (https://cran.r-project.org/web/packages/ini/index.html)</li> <li>jsonlite (https://cran.r-project.org/web/packages/jsonlite/index.html)</li> </ul>"}]}